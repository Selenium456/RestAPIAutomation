package Utils;

import io.restassured.response.Response;

public class RestResponse<T> implements IRestResponse<T> {
	private T data;
	 private Response response;
	 private Exception e;
	
	 public RestResponse(Class<T> t, Response response) {
		 this.response = response;
		 try{
		 this.data = t.newInstance();
		 }catch (Exception e){
		 throw new RuntimeException("There should be a default constructor in the Response POJO");
		 }
		 }

	@Override
	public T getBody() {
		try {
			 data = (T) response.getBody().as(data.getClass());
			 }catch (Exception e) {
			 this.e=e;
			 }
			 return data;

	}

	@Override
	public String getContent() {
		return response.getBody().asString();
	}

	@Override
	public int getStatusCode() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean isSuccessful() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public String getStatusDescription() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Response getResponse() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Exception getException() {
		// TODO Auto-generated method stub
		return null;
	}
	

}
